name: Build and Release Docker Image

on:
  push:
    tags:
      - "v*.*.*"
      - "v*.*.*-pre-*"
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write # For creating Releases and assets
      packages: write # For pushing to GHCR

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version tag
        id: version
        run: |
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Convert repository owner to lowercase
        id: lowercase
        run: |
          echo "owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Determine Docker tags
        id: docker-tags
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          OWNER="${{ steps.lowercase.outputs.owner }}"
          
          # Base tags
          TAGS="ghcr.io/$OWNER/app:$VERSION"
          
          # Add appropriate latest tag based on whether it's a pre-release
          if [[ "${{ github.ref_name }}" == *"-pre-"* ]]; then
            TAGS="$TAGS,ghcr.io/$OWNER/app:latest-pre"
            echo "Pre-release detected, using latest-pre tag"
          else
            TAGS="$TAGS,ghcr.io/$OWNER/app:latest"
            echo "Stable release detected, using latest tag"
          fi
          
          echo "Final tags: $TAGS"
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Calculate requirements.txt hash
        id: req_hash
        run: |
          echo "hash=$(sha256sum requirements.txt | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_GITHUB_TOKEN }}

      # - name: Extract metadata for Docker
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ghcr.io/${{ github.repository }}
      #     tags: |
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}
      #       type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            APP_VERSION=${{ steps.version.outputs.version }}
            MODEL_SERVICE_VERSION=${{ steps.version.outputs.version }}
            REQ_HASH=${{ steps.req_hash.outputs.hash }}
          tags: ${{ steps.docker-tags.outputs.tags }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.PAT_GITHUB_TOKEN }}
          draft: false
          # prerelease: false
          prerelease: ${{ contains(github.ref_name, '-pre') }}
          name: Release ${{ github.ref_name }}
          body: |
            # Release ${{ github.ref_name }}

            ## Docker Images

            - `ghcr.io/${{ steps.lowercase.outputs.owner }}/app:${{ steps.version.outputs.version }}`
            - `ghcr.io/${{ steps.lowercase.outputs.owner }}/app:${{ contains(github.ref_name, '-pre-') && 'latest-pre' || 'latest' }}`
            
            Platforms supported:
            - linux/amd64
            - linux/arm64

            ## Usage

            ```bash
            docker pull ghcr.io/${{ steps.lowercase.outputs.owner }}/app:${{ steps.version.outputs.version }}
            ```
