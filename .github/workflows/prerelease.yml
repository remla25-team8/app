name: Create Pre-release Version

on:
  push:
    tags:
      - "v*.*.*"
      - "!v*.*.*-pre*"

  workflow_dispatch:

jobs:
  create-prerelease:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Calculate next pre-release version
        id: next-version
        run: |
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          echo "Current tag: $CURRENT_TAG"

          VERSION=${CURRENT_TAG#v}

          # Split into components
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"

          NEXT_PATCH=$((PATCH + 1))

          # Here we generate timestamp to make pre-release unique
          TIMESTAMP=$(date +%Y%m%d%H%M%S)

          # This will create pre-release version
          NEXT_PRE_VERSION="v$MAJOR.$MINOR.$NEXT_PATCH-pre.$TIMESTAMP"
          echo "Next pre-release version: $NEXT_PRE_VERSION"
          echo "NEXT_VERSION=$NEXT_PRE_VERSION" >> $GITHUB_ENV

      - name: Create pre-release tag
        run: |
          git tag -a $NEXT_VERSION -m "Automatic pre-release version after $CURRENT_TAG"
          git push origin $NEXT_VERSION

      - name: Create GitHub Pre-Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.PAT_GITHUB_TOKEN }}
          draft: false
          prerelease: true
          tag_name: ${{ env.NEXT_VERSION }}
          name: Pre-release ${{ env.NEXT_VERSION }}
          body: |
            # Pre-release ${{ env.NEXT_VERSION }}

            This is an automatic pre-release following the stable release ${{ github.ref_name }}.

            ## Docker Images

            - `ghcr.io/${{ github.repository }}:${{ env.NEXT_VERSION }}`

            ## Usage

            ```bash
            docker pull ghcr.io/${{ github.repository }}:${{ env.NEXT_VERSION }}
            ```
